CREATE TABLE IF NOT EXISTS person (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    username VARCHAR(30) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL UNIQUE, -- Increased for typical email lengths
    password VARCHAR(255) NOT NULL, -- Increased to accommodate hashed passwords
    role VARCHAR(30) NOT NULL,
    enable BOOLEAN NOT NULL DEFAULT false,
    provider VARCHAR(50), -- Added length
    provider_id VARCHAR(100) -- Added length
);


CREATE TABLE IF NOT EXISTS activation (
    person_email VARCHAR(100) REFERENCES person(email) ON DELETE CASCADE PRIMARY KEY,
    key VARCHAR NOT NULL UNIQUE
);

CREATE TABLE category (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description TEXT
);

CREATE TABLE product(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description TEXT,
    article VARCHAR NOT NULL UNIQUE,
    price DECIMAL(10,2) CHECK (price > 0) NOT NULL,
    count INT CHECK (count >= 0) NOT NULL,
    category_id INT REFERENCES category(id) ON DELETE SET NULL,
    created_at TIMESTAMP NOT NULL DEFAULT current_timestamp
);

CREATE TABLE order(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    person_id REFERENCES person(id) NOT NULL ON DELETE SET CASCADE,
    delevery_type VARCHAR NOT NULL,
    status VARCHAR NOT NULL,
    discount_percent INT NOT NULL DEFAULT 0,
    shipping_address VARCHAR,
    created_at TIMESTAMP NOT NULL
);

CREATE TABLE cart_item(
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_id INT NOT NULL ON DELETE CASCADE,
    person_id INT NOT NULL ON DELETE CASCADE,
    quantity INT CHECK (quantity > 0)
    order_id REFERENCES order(id)
);